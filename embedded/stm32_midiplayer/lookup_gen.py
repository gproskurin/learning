#!/usr/bin/env python3
import math

DDS_VALUE_T = 'dds_value_t' # c++ type
FREQ_TYPE_T = 'uint32_t'

print('// Autogenerated file\n')
print()

# freq100
M = 2 ** (1/12)
LEN = 12*9
freqs100 = [440*100/(M**x) for x in range(57,0,-1)] + [44000] + [440*100*(M**x) for x in range(1,51)]
sfreqs100 = [str(round(x)) for x in freqs100]
assert len(freqs100) == LEN
print('\nconst std::array<' + FREQ_TYPE_T + ', 12*9> freq100 = {\n ' + f'{", ".join(sfreqs100)}' + '\n};\n');


def sin_points(n):
	l = [
		math.floor(math.sin(x*2*math.pi/n)*65535/2 + 65536/2)
		for x in range(0, n)
	]
	for x in l:
		assert x >= 0
		assert x < 65536
	assert len(l) == n
	return l


# sin tables
for sz in [3, 4, 5, 10, 12]:
	count = 2**sz
	print(f'\n// sin{sz}')
	print(f'const std::array<{DDS_VALUE_T}, {count}> lookup_table_sin{sz} = ' + '{')
	print(f' ' + ", ".join([str(x) for x in sin_points(count)]))
	print('};\n')

